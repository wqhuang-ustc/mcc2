apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-a
  labels:
    name: mongo-svc-a
spec:
  type: LoadBalancer
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongo-svc-a
  selector:
    name: mongo-node1
    instance: rod
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-b
  labels:
    name: mongo-svc-b
spec:
  type: LoadBalancer
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongo-svc-b
  selector:
    name: mongo-node2
    instance: jame
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-c
  labels:
    name: mongo-svc-c
spec:
  type: LoadBalancer
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongo-svc-c
  selector:
    name: mongo-node3
    instance: freddy
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: mongo-rc1
  labels:
    name: mongo-rc
spec:
  replicas: 1
  selector:
    name: mongo-node1
  template:
    metadata:
      labels:
        name: mongo-node1
        instance: rod
    spec:
      containers:
      - name: mongo-node1
        image: mongo
        command:
         - mongod
         - "--replSet"
         - my_replica_set
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage1
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage1
        awsElasticBlockStore:
          volumeID: vol-020d9b5deef4bd85e
          fsType: ext4
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: mongo-rc2
  labels:
    name: mongo-rc
spec:
  replicas: 1
  selector:
    name: mongo-node2
  template:
    metadata:
      labels:
        name: mongo-node2
        instance: jame
    spec:
      containers:
      - name: mongo-node2
        image: mongo
        command:
         - mongod
         - "--replSet"
         - my_replica_set
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage2
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage2
        awsElasticBlockStore:
          volumeID: vol-06310ddffb52593cb
          fsType: ext4

---
apiVersion: v1
kind: ReplicationController
metadata:
  name: mongo-rc3
  labels:
    name: mongo-rc
spec:
  replicas: 1
  selector:
    name: mongo-node3
  template:
    metadata:
      labels:
        name: mongo-node3
        instance: freddy
    spec:
      containers:
      - name: mongo-node3
        image: mongo
        command:
         - mongod
         - "--replSet"
         - my_replica_set
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage3
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage3
        awsElasticBlockStore:
          volumeID: vol-0da370c7727171858
          fsType: ext4
---
apiVersion: v1
kind: Service
metadata:
  name: ocr-svc-a
  labels:
    name: ocr-svc-a
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: ocr-svc-a
  selector:
    name: ocr-node1
    instance: jack
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: ocr-rc1
  labels:
    name: ocr-rc
spec:
  replicas: 1
  selector:
    name: ocr-node1
  template:
    metadata:
      labels:
        name: ocr-node1
        instance: jack
    spec:
      containers:
      - name: ocr-node1
        image: kylinhuang/mcc1:latest
#        command:
#         - python3
#         - server.py
#         - my_replica_set
        ports:
        - containerPort: 8080
          name: ocr-server
